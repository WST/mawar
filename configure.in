#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)
AC_INIT(mawar, 0.1, BUG-REPORT-ADDRESS)
#AC_CONFIG_SRCDIR([parse_url.c])
AC_CONFIG_AUX_DIR(autoconf)
AC_CONFIG_HEADER([src/include/config.h])
AC_CONFIG_HEADER([nanosoft/src/include/nanosoft/config.h])

AC_CANONICAL_HOST

#NETWORK_LIBS="GeoIP"
NETWORK_LIBS=""

case "$host_os" in
linux)
	AC_DEFINE(UNIX, 1)
	;;
mingw32)
	AC_DEFINE(WINDOWS, 1)
	AC_CHECK_LIB(ws2_32, main, [NETWORK_LIBS="$NETWORK_LIBS -lws2_32"], [AC_MSG_ERROR([ws2_32 library not found])])
	;;
esac

AC_SUBST(NETWORK_LIBS)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_INSTALL
AC_CHECK_TOOL(AR, ar, ar)
AC_CHECK_TOOL(RANLIB, ranlib, ranlib)
AC_CHECK_TOOL(MKDIR, mkdir, mkdir)

AC_LANG_CPLUSPLUS

AC_ARG_ENABLE(dump_io, AS_HELP_STRING([--enable-dump_io], [echo I/O messages to stdout]), [
		CFLAGS="$CFLAGS -DDUMP_IO"
		CXXFLAGS="$CXXFLAGS -DDUMP_IO"
	])

AC_ARG_ENABLE(debug_tls, AS_HELP_STRING([--enable-debug_tls], [dump GnuTLS debug log]), [
		CFLAGS="$CFLAGS -DDEBUG_TLS"
		CXXFLAGS="$CXXFLAGS -DDEBUG_TLS"
	])

AC_CHECK_LIB(stdc++, main)
AC_CHECK_LIB(z, main, [], [])

PKG_CHECK_MODULES([GSASL], [libgsasl >= 1.4.0], [AC_DEFINE(HAVE_GSASL, 1)], [AC_ERROR(GNU SASL library required)])
AC_SUBST([GSASL_CFLAGS])
AC_SUBST([GSASL_LIBS])

PKG_CHECK_MODULES([LIBGNUTLS], [gnutls >= 2.8.0], [AC_DEFINE(HAVE_GNUTLS, 1)])
AC_SUBST([LIBGNUTLS_CFLAGS])
AC_SUBST([LIBGNUTLS_LIBS])

AC_ARG_WITH(expat, AS_HELP_STRING([--with-expat=PREFIX], [expat XML parser]), [
		CXXFLAGS="$CXXFLAGS -I$withval/include"
		LDFLAGS="$LDFLAGS -L$withval/lib -Wl,-rpath=$withval/lib"
	])
AC_CHECK_LIB(expat, main, [], [AC_ERROR(expat library required)])
AC_CHECK_LIB(pcre, main, [], [AC_ERROR(PCRE library required)])

AC_ARG_WITH(pthread, AS_HELP_STRING([--with-pthread=PREFIX], [pthread]), [
		case "$withval" in
		yes)
			USE_PTHREAD=yes
			PTHREAD_CFLAGS=""
			PTHREAD_CXXFLAGS=""
			PTHREAD_LDFLAGS=""
			;;
		no)
			USE_PTHREAD=no
			;;
		*)
			USE_PTHREAD=yes
			PTHREAD_CFLAGS="-I$withval/include"
			PTHREAD_CXXFLAGS="-I$withval/include"
			PTHREAD_LDFLAGS="-L$withval/lib -Wl,-rpath=$withval/lib"
			CFLAGS="$CXXFLAGS $PTHREAD_CFLAGS"
			CXXFLAGS="$CXXFLAGS $PTHREAD_CXXFLAGS"
			LDFLAGS="$LDFLAGS $PTHREAD_LDFLAGS"
			;;
		esac
	], [])
if test "$USE_PTHREAD" = "yes"; then
	AC_CHECK_LIB(pthread, main, [], [AC_ERROR(pthread library is required)])
	CFLAGS="$CFLAGS -DUSE_PTHREAD"
	CXXFLAGS="$CXXFLAGS -DUSE_PTHREAD"
fi

AC_ARG_WITH(nanosoft, AS_HELP_STRING([--with-nanosoft=PREFIX], [prefix to nanosoft libraries]), [
		CXXFLAGS="$CXXFLAGS -I$withval/include"
		LDFLAGS="$LDFLAGS -L$withval/lib -Wl,-rpath=$withval/lib"
	])
#AC_CHECK_LIB(nanosoft, main, [], [AC_ERROR(nanosoft library is required)])
#AC_CHECK_LIB(netd, main, [], [AC_ERROR(nanosoft netd library is required)])
#AC_CHECK_LIB(GeoIP, main, [], [AC_ERROR(GeoIP library is required)])

WITH_MYSQL=yes
MYSQL_LIBS=""
AC_ARG_WITH(mysql, AS_HELP_STRING([--with-mysql=PREFIX], [MySQL client library]), [
		if test "$withval" != "yes"; then
			CPPFLAGS="$CPPFLAGS  -I$withval/include"
			LDFLAGS="$LDFLAGS -L$withval/lib -Wl,-rpath=$withval/lib"
		fi
		WITH_MYSQL=yes
	])

if test "$USE_PTHREAD" = "yes"; then
	MYSQL_LIBNAME="mysqlclient_r"
else
	MYSQL_LIBNAME="mysqlclient"
fi

AC_CHECK_LIB($MYSQL_LIBNAME, mysql_real_connect, [
		MYSQL_LIBS="-l$MYSQL_LIBNAME"
		WITH_MYSQL="yes"
	], [
		if test "$WITH_MYSQL" = "yes"; then
			AC_ERROR(MySQL client library not found)
		fi
	])
AC_SUBST(WITH_MYSQL)
AC_SUBST(MYSQL_LIBS)

AC_ARG_WITH(udns, AS_HELP_STRING([--with-udns=PREFIX], [UDNS (DNS Resolver Library)]), [
		CPPFLAGS="$CPPFLAGS  -I$withval/include"
		LDFLAGS="$LDFLAGS -L$withval/lib -Wl,-rpath=$withval/lib"
	])
AC_CHECK_LIB(udns, main, [], [AC_ERROR(UDNS (DNS Resolver Library) required)])

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
