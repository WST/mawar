
root = @srcdir@
srcdir = $(root)/src

config = ./src/include/config.h

ns_root = $(root)/nanosoft
ns_srcdir = $(ns_root)/src
ns_srcbin = $(ns_srcdir)/progs
ns_srclib = $(ns_srcdir)/lib
ns_srcinc = $(ns_srcdir)/include
ns_srcexm = $(ns_srcdir)/examples


CPPFLAGS = @CPPFLAGS@ -I./src/include -I/opt/gsasl/include -I$(ns_srcinc)
LDFLAGS = @LDFLAGS@ -L.
CXXFLAGS = @CXXFLAGS@ $(CPPFLAGS)
CFLAGS = @CXXFLAGS@ $(CPPFLAGS)
CXX = @CXX@ $(CXXFLAGS)
CC = @CC@ $(CFLAGS)
AR = @AR@
RANLIB = @RANLIB@
INSTALL = @INSTALL@
MKDIR = @MKDIR@
LIBS = @LIBS@ -lgsasl
PROXY_LIBS = @LIBS@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
includedir = @includedir@

PREFIX = $(DESTDIR)$(prefix)
EPREFIX = $(DESTDIR)$(exec_prefix)
BINDIR = $(DESTDIR)$(bindir)
INCLUDEDIR = $(DESTDIR)$(includedir)
LIBDIR = $(DESTDIR)$(libdir)

PATHS = \
	-DPATH_PREFIX="\"@prefix@\"" \
	-DPATH_ETC="\"@sysconfdir@\"" \
	-DPATH_BIN="\"@bindir@\"" \
	-DPATH_SBIN="\"@sbindir@\"" \
	-DPATH_LIBEXEC="\"@libexecdir@\"" \
	-DPATH_VAR="\"@localstatedir@\""

INSTALL_BIN = $(INSTALL) -m755
INSTALL_INC = $(INSTALL) -m644
INSTALL_LIB = $(INSTALL) -m644

BUILD = @build@
HOST = @host@
HOST_OS = @host_os@

SASL = @SASL@
SASL_LIBS = @SASL_LIBS@

WITH_MYSQL = @WITH_MYSQL@
MYSQL_LIBS = @MYSQL_LIBS@

MAWAR_OBJECTS=xmppserver.o
MAWAR_OBJECTS+=xmppstream.o
MAWAR_OBJECTS+=xmppclient.o
MAWAR_OBJECTS+=myconsole.o
MAWAR_OBJECTS+=xml_tag.o
MAWAR_OBJECTS+=taghelper.o
MAWAR_OBJECTS+=attagparser.o
MAWAR_OBJECTS+=tagbuilder.o
MAWAR_OBJECTS+=stanza.o
MAWAR_OBJECTS+=adhoccommand.o
MAWAR_OBJECTS+=jid.o
MAWAR_OBJECTS+=configfile.o
MAWAR_OBJECTS+=xmppdomain.o
MAWAR_OBJECTS+=virtualhost.o
MAWAR_OBJECTS+=xep0114listener.o
MAWAR_OBJECTS+=xep0114.o
MAWAR_OBJECTS+=s2slistener.o
MAWAR_OBJECTS+=xmppserverinput.o
MAWAR_OBJECTS+=xmppserveroutput.o
MAWAR_OBJECTS+=xmppextension.o
MAWAR_OBJECTS+=xmppextensioninput.o
MAWAR_OBJECTS+=xmppextensionoutput.o
MAWAR_OBJECTS+=xmppgroups.o
MAWAR_OBJECTS+=serverstatus.o
#MAWAR_OBJECTS+=geoip.o
MAWAR_OBJECTS+=logs.o
MAWAR_OBJECTS+=stanzabuffer.o
MAWAR_OBJECTS+=functions.o
MAWAR_OBJECTS+=form.o
MAWAR_OBJECTS+=command.o

PROXY_OBJECTS=xmppproxy.o xmppproxystream.o logs.o

MAWAR_TESTS=test-01 test-02

.PHONY: all install
all: maward proxyd

maward: $(srcdir)/main.cpp $(MAWAR_OBJECTS) libns_core.a libns_netd.a libns_xml.a libns_sasl.a
	$(CXX) $(srcdir)/main.cpp  $(PATHS) $(MAWAR_OBJECTS) $(LDFLAGS) -lns_core -lns_netd -lns_xml -lns_sasl $(MYSQL_LIBS) $(LIBS) -o maward

proxyd: $(srcdir)/proxy.cpp $(PROXY_OBJECTS) libns_core.a libns_netd.a
	$(CXX) $(srcdir)/proxy.cpp $(PROXY_OBJECTS) $(LDFLAGS) -lns_core -lns_netd $(LIBS) -o proxyd

include $(ns_root)/core.mf
include $(ns_root)/xml.mf
include $(ns_root)/netd.mf
include $(ns_root)/sasl.mf

.PHONY: tests
tests: $(MAWAR_TESTS)
	./test-01
	./test-02

test-01: $(srcdir)/tests/test-01.cpp $(MAWAR_OBJECTS)
	$(CXX) $(srcdir)/tests/test-01.cpp $(MAWAR_OBJECTS) $(LDFLAGS) $(LIBS) -o test-01

test-02: $(srcdir)/tests/test-02.cpp $(PROXY_OBJECTS)
	$(CXX) $(srcdir)/tests/test-02.cpp $(PROXY_OBJECTS) $(LDFLAGS) $(LIBS) -o test-02
	touch test1.xml test2.xml

# modules

xmppserver.o: $(srcdir)/xmppserver.cpp $(srcdir)/include/xmppserver.h
	$(CXX) -c $(srcdir)/xmppserver.cpp -o xmppserver.o

xmppstream.o: $(srcdir)/xmppstream.cpp $(srcdir)/include/xmppstream.h $(srcdir)/include/tagbuilder.h
	$(CXX) -c $(srcdir)/xmppstream.cpp -o xmppstream.o

xmppclient.o: $(srcdir)/xmppclient.cpp $ $(srcdir)/include/xmppclient.h $(srcdir)/include/xmppstream.h
	$(CXX) -c $(srcdir)/xmppclient.cpp -o xmppclient.o

myconsole.o: $(srcdir)/myconsole.cpp $(srcdir)/include/myconsole.h
	$(CXX) -c $(srcdir)/myconsole.cpp -o myconsole.o

xml_tag.o: $(srcdir)/xml_tag.cpp $(srcdir)/include/xml_tag.h $(srcdir)/include/xml_types.h
	$(CXX) -c $(srcdir)/xml_tag.cpp -o xml_tag.o

taghelper.o: $(srcdir)/taghelper.cpp $(srcdir)/include/taghelper.h $(srcdir)/include/xml_tag.h $(srcdir)/include/xml_types.h
	$(CXX) -c $(srcdir)/taghelper.cpp -o taghelper.o

attagparser.o: $(srcdir)/attagparser.cpp $(srcdir)/include/attagparser.h
	$(CXX) -c $(srcdir)/attagparser.cpp -o attagparser.o

tagbuilder.o: $(srcdir)/tagbuilder.cpp $(srcdir)/include/tagbuilder.h
	$(CXX) -c $(srcdir)/tagbuilder.cpp -o tagbuilder.o

stanza.o: $(srcdir)/stanza.cpp $(srcdir)/include/stanza.h
	$(CXX) -c $(srcdir)/stanza.cpp -o stanza.o

adhoccommand.o: $(srcdir)/adhoccommand.cpp $(srcdir)/include/adhoccommand.h $(srcdir)/include/taghelper.h $(srcdir)/include/stanza.h
	$(CXX) -c $(srcdir)/adhoccommand.cpp -o adhoccommand.o

jid.o: $(srcdir)/jid.cpp $(srcdir)/include/jid.h
	$(CXX) -c $(srcdir)/jid.cpp -o jid.o

configfile.o: $(srcdir)/configfile.cpp $(srcdir)/include/configfile.h
	$(CXX) -c $(srcdir)/configfile.cpp -o configfile.o

virtualhost.o: $(srcdir)/virtualhost.cpp $(srcdir)/include/virtualhost.h $(srcdir)/include/xmppdomain.h $(srcdir)/include/xmppserver.h
	$(CXX) -c $(srcdir)/virtualhost.cpp -o virtualhost.o

xmppdomain.o: $(srcdir)/xmppdomain.cpp $(srcdir)/include/xmppdomain.h $(srcdir)/include/xmppserver.h
	$(CXX) -c $(srcdir)/xmppdomain.cpp -o xmppdomain.o

xep0114listener.o: $(srcdir)/xep0114listener.cpp $(srcdir)/include/xep0114listener.h $(srcdir)/include/xmppserver.h
	$(CXX) -c $(srcdir)/xep0114listener.cpp -o xep0114listener.o

xep0114.o: $(srcdir)/xep0114.cpp $(srcdir)/include/xep0114.h $(srcdir)/include/xmppstream.h $(srcdir)/include/xmppdomain.h
	$(CXX) -c $(srcdir)/xep0114.cpp -o xep0114.o

s2slistener.o: $(srcdir)/s2slistener.cpp $(srcdir)/include/s2slistener.h $(srcdir)/include/xmppserverinput.h $(srcdir)/include/xmppserver.h
	$(CXX) -c $(srcdir)/s2slistener.cpp -o s2slistener.o

xmppserveroutput.o: $(srcdir)/xmppserveroutput.cpp $(srcdir)/include/xmppserveroutput.h $(srcdir)/include/xmppdomain.h $(srcdir)/include/xmppserver.h $(srcdir)/include/xmppstream.h
	$(CXX) -c $(srcdir)/xmppserveroutput.cpp -o xmppserveroutput.o

xmppserverinput.o: $(srcdir)/xmppserverinput.cpp $(srcdir)/include/xmppserverinput.h $(srcdir)/include/xmppserver.h $(srcdir)/include/xmppstream.h
	$(CXX) -c $(srcdir)/xmppserverinput.cpp -o xmppserverinput.o

xmppextension.o: $(srcdir)/xmppextension.cpp $(srcdir)/include/xmppextension.h $(srcdir)/include/xmppserver.h $(srcdir)/include/xmppstream.h
	$(CXX) -c $(srcdir)/xmppextension.cpp -o xmppextension.o

xmppextensioninput.o: $(srcdir)/xmppextensioninput.cpp $(srcdir)/include/xmppextensioninput.h $(srcdir)/include/xmppserver.h $(srcdir)/include/xmppstream.h
	$(CXX) -c $(srcdir)/xmppextensioninput.cpp -o xmppextensioninput.o

xmppextensionoutput.o: $(srcdir)/xmppextensionoutput.cpp $(srcdir)/include/xmppextensionoutput.h $(srcdir)/include/xmppserver.h $(srcdir)/include/xmppstream.h
	$(CXX) -c $(srcdir)/xmppextensionoutput.cpp -o xmppextensionoutput.o

xmppgroups.o: $(srcdir)/xmppgroups.cpp $(srcdir)/include/xmppgroups.h $(srcdir)/include/xmppdomain.h $(srcdir)/include/xmppserver.h $(srcdir)/include/xmppstream.h $(srcdir)/include/adhoccommand.h
	$(CXX) -c $(srcdir)/xmppgroups.cpp -o xmppgroups.o

#geoip.o: $(srcdir)/geoip.cpp $(srcdir)/include/geoip.h
#	$(CXX) -c $(srcdir)/geoip.cpp -o geoip.o

serverstatus.o: $(srcdir)/serverstatus.cpp $(srcdir)/include/serverstatus.h $(srcdir)/include/xmppserver.h
	$(CXX) -c $(srcdir)/serverstatus.cpp -o serverstatus.o

xmppproxy.o: $(srcdir)/xmppproxy.cpp $(srcdir)/include/xmppproxy.h $(srcdir)/include/xmppproxystream.h
	$(CXX) -c $(srcdir)/xmppproxy.cpp -o xmppproxy.o

xmppproxystream.o: $(srcdir)/xmppproxystream.cpp $(srcdir)/include/xmppproxystream.h
	$(CXX) -c $(srcdir)/xmppproxystream.cpp -o xmppproxystream.o

logs.o: $(srcdir)/logs.cpp $(srcdir)/include/logs.h
	$(CXX) -c $(srcdir)/logs.cpp -o logs.o

stanzabuffer.o: $(srcdir)/stanzabuffer.cpp $(srcdir)/include/stanzabuffer.h
	$(CXX) -c $(srcdir)/stanzabuffer.cpp -o stanzabuffer.o

functions.o: $(srcdir)/functions.cpp $(srcdir)/include/functions.h
	$(CXX) -c $(srcdir)/functions.cpp -o functions.o

form.o: $(srcdir)/form.cpp $(srcdir)/include/form.h
	$(CXX) -c $(srcdir)/form.cpp -o form.o
	
command.o: $(srcdir)/command.cpp $(srcdir)/include/command.h
	$(CXX) -c $(srcdir)/command.cpp -o command.o

# CLEAN

.PHONY: clean distclean

distclean: clean
	rm -f Makefile *.log  $(config) config.status $(MAWAR_TESTS) test1.xml test2.xml lib*.a

clean:
	rm -f *.o maward proxyd

